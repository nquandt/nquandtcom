### Node template
.DS_Store
.vs
# Logs
logs
*.log
npm-debug.log*

site_output/

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directory
# https://docs.npmjs.com/misc/faq#should-i-check-my-node-modules-folder-into-git
node_modules
.npmrc
*.log

# Typings
typings/

# Typescript
test/**/*.js
test/**/*.js.map

# Test
/.tmp
/.nyc_output

# IDE
.vscode
.idea
.env

# Project
/public
/dist

# random
notes

.output/
[Oo]bj/
[Bb]in/

# Build results
[Dd]ebug/
[Rr]elease/
x64/
.build/
dist/
build/
!/docker/build
!/**/docker/**/[Bb]in/
.generated/

# Hedgehog Team Development for Sitecore
*.scproj.user
IconCache/
T4RenderCache/
BuiltFiles_*.txt

specs/**/[Bb]in/
.nuget/
_ReSharper.*
packages/
artifacts/
*.user
*.cache
*.suo
*.userprefs
*DS_Store
*.sln.ide
lib/license.xml
lib/Sitecore/*
!lib/Sitecore/readme.MD
lib/System/*
!lib/System/readme.MD
.sonar
vars.user.cmd
/.vs
/target
**/node_modules
temp/
*.ncrunchproject
*.ncrunchsolution
.vscode
nCrunchTemp*.*
/src/Project/MilwaukeeTool/tds/Sitecore.MilwaukeeTool.Website.Master/Sitecore.MilwaukeeTool.Website.Master_Debug.xml
/src/Feature/Navigation/Sitecore.Feature.Navigation.Master/Sitecore.Feature.Navigation.Master_Debug.xml
/src/Feature/Navigation/Sitecore.Feature.Navigation/Sitecore.Feature.Navigation.csproj.DotSettings
*.DotSettings
gulp-config-local.js
/empirelevel/
/empirelevel/
*.trx
/TestResults/*
/sandbox
/sandboxUpgrade

# Packout Builder
packout.error
packout.log
src/Feature/PackoutBuilder/MilwaukeeTool.Feature.PackoutBuilder/scripts/PackoutBuilder/React/*

# may contain OAuth secrets, do not commit
.sitecore/user.json

# package reference cache
.sitecore/package-cache

# Ephemeral index caches used by serialization, do not commit
.scindex

# Don't commit packages
*.itempackage
*.sicpackage

.env*

yarn-error.log

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
# *.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
